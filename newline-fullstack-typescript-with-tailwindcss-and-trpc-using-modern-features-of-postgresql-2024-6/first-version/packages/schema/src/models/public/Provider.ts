// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { email } from './Email';
import type Email from './Email';
import { z } from 'zod';

/** Identifier type for public.provider */
export type ProviderId = number & { __brand: 'ProviderId' };

/**
 * Represents the table public.provider
 * Service provider
 */
export default interface Provider {
  id: ProviderId;

  name: string;

  email: Email;
}

/**
 * Represents the initializer for the table public.provider
 * Service provider
 */
export interface ProviderInitializer {
  id?: ProviderId;

  name: string;

  email: Email;
}

/**
 * Represents the mutator for the table public.provider
 * Service provider
 */
export interface ProviderMutator {
  id?: ProviderId;

  name?: string;

  email?: Email;
}

export const providerId: z.Schema<ProviderId> = z.number() as any;

export const provider: z.Schema<Provider> = z.object({
  id: providerId,
  name: z.string(),
  email: email,
}) as any;

export const providerInitializer: z.Schema<ProviderInitializer> = z.object({
  id: providerId.optional(),
  name: z.string(),
  email: email,
}) as any;

export const providerMutator: z.Schema<ProviderMutator> = z.object({
  id: providerId.optional(),
  name: z.string().optional(),
  email: email.optional(),
}) as any;
