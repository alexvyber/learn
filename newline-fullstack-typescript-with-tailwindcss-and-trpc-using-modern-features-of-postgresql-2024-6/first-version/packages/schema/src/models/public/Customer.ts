// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { email } from './Email';
import type Email from './Email';
import { z } from 'zod';

/** Identifier type for public.customer */
export type CustomerId = number & { __brand: 'CustomerId' };

/** Represents the table public.customer */
export default interface Customer {
  id: CustomerId;

  name: string;

  email: Email;
}

/** Represents the initializer for the table public.customer */
export interface CustomerInitializer {
  id?: CustomerId;

  name: string;

  email: Email;
}

/** Represents the mutator for the table public.customer */
export interface CustomerMutator {
  id?: CustomerId;

  name?: string;

  email?: Email;
}

export const customerId: z.Schema<CustomerId> = z.number() as any;

export const customer: z.Schema<Customer> = z.object({
  id: customerId,
  name: z.string(),
  email: email,
}) as any;

export const customerInitializer: z.Schema<CustomerInitializer> = z.object({
  id: customerId.optional(),
  name: z.string(),
  email: email,
}) as any;

export const customerMutator: z.Schema<CustomerMutator> = z.object({
  id: customerId.optional(),
  name: z.string().optional(),
  email: email.optional(),
}) as any;
