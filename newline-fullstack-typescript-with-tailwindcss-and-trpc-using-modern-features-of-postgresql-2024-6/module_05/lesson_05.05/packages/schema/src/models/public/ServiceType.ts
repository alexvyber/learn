// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from 'zod';

/** Identifier type for public.service_type */
export type ServiceTypeId = number & { __brand: 'ServiceTypeId' };

/** Represents the table public.service_type */
export default interface ServiceType {
  id: ServiceTypeId;

  name: string;

  description: string;
}

/** Represents the initializer for the table public.service_type */
export interface ServiceTypeInitializer {
  id?: ServiceTypeId;

  name: string;

  description: string;
}

/** Represents the mutator for the table public.service_type */
export interface ServiceTypeMutator {
  id?: ServiceTypeId;

  name?: string;

  description?: string;
}

export const serviceTypeId = z.number() as unknown as z.Schema<ServiceTypeId>;

export const serviceType = z.object({
  id: serviceTypeId,
  name: z.string(),
  description: z.string(),
}) as unknown as z.Schema<ServiceType>;

export const serviceTypeInitializer = z.object({
  id: serviceTypeId.optional(),
  name: z.string(),
  description: z.string(),
}) as unknown as z.Schema<ServiceTypeInitializer>;

export const serviceTypeMutator = z.object({
  id: serviceTypeId.optional(),
  name: z.string().optional(),
  description: z.string().optional(),
}) as unknown as z.Schema<ServiceTypeMutator>;
