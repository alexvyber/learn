exports.up = async function (knex) {
  return knex.raw(`
    CREATE EXTENSION citext;
    CREATE DOMAIN email AS citext
      CHECK ( value ~ '^[a-zA-Z0-9.!#$%&''*+/=\\?^_\`{|}~-]+@[a-zA-Z0-9](\\?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])\\?(\\?:\\.[a-zA-Z0-9](\\?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])\\?)+$' );

    CREATE TABLE provider (
      id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name text NOT NULL,
      email email NOT NULL UNIQUE
    );

    CREATE TABLE customer (
      id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name text NOT NULL,
      email email NOT NULL UNIQUE
    );
  
    CREATE TABLE service_type (
      id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name text NOT NULL UNIQUE,
      description text NOT NULL
    );

    CREATE EXTENSION btree_gist;
    CREATE TABLE booking (
      id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      customer_id int NOT NULL REFERENCES customer(id) ON DELETE CASCADE,
      provider_id int NOT NULL REFERENCES provider(id) ON DELETE CASCADE,
      during tsrange NOT NULL,
      EXCLUDE USING gist (provider_id WITH =, during WITH &&)
    );

    COMMENT ON TABLE booking IS 'Represents a booking made by a given customer, for a given provider. Guaranteed not to overlap with other bookings for said provider.';
    COMMENT ON COLUMN booking.during IS 'Time of the booking';

    CREATE INDEX booking_customer_id_idx ON booking (customer_id);
    CREATE INDEX booking_provider_id_idx ON booking (provider_id);
  `);
};

exports.down = async function (knex) {
  return knex.raw(`
    DROP INDEX booking_provider_id_idx;
    DROP INDEX booking_customer_id_idx;
    DROP TABLE booking;
    DROP EXTENSION btree_gist;
    DROP TABLE customer;
    DROP TABLE provider;
    DROP DOMAIN email;
    DROP EXTENSION citext;
  `);
};
