// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { email, type default as Email } from './Email';
import { z } from 'zod';

/** Identifier type for public.provider */
export type ProviderId = number & { __brand: 'ProviderId' };

/** Represents the table public.provider */
export default interface Provider {
  id: ProviderId;

  name: string;

  email: Email;
}

/** Represents the initializer for the table public.provider */
export interface ProviderInitializer {
  id?: ProviderId;

  name: string;

  email: Email;
}

/** Represents the mutator for the table public.provider */
export interface ProviderMutator {
  id?: ProviderId;

  name?: string;

  email?: Email;
}

export const providerId = z.number() as unknown as z.Schema<ProviderId>;

export const provider = z.object({
  id: providerId,
  name: z.string(),
  email: email,
}) as unknown as z.Schema<Provider>;

export const providerInitializer = z.object({
  id: providerId.optional(),
  name: z.string(),
  email: email,
}) as unknown as z.Schema<ProviderInitializer>;

export const providerMutator = z.object({
  id: providerId.optional(),
  name: z.string().optional(),
  email: email.optional(),
}) as unknown as z.Schema<ProviderMutator>;
